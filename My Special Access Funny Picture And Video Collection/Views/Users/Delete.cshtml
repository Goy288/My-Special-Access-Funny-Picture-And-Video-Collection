@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model Microsoft.AspNetCore.Identity.IdentityUser

@{
    ViewData["Title"] = "Delete";
}
@if (SignInManager.IsSignedIn(User))
{
    @if (Model.UserName == "Admin")
    {
        <h1>@ViewData["Title"]</h1>

        <h3>Are you sure you want to delete this?</h3>
        <div>
            <h4>User</h4>
            <hr />
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.UserName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.UserName)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Email)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Email)
                </dd>
            </dl>

            <form asp-action="Delete">
                <input type="hidden" asp-for="Id" />
                <input type="submit" value="Delete" class="btn btn-danger" /> |
                <a asp-action="Index">Back to List</a>
            </form>
        </div>
    }
    else
    {
        <h1>
            Yeah, how about you don't delete the admin?
        </h1>
    }
}
else
{
    <h1>
        You need to have Admin access if you wish to delete a user from the database.
    </h1>
}